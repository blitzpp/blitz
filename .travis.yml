language: cpp

matrix:
  include:
#    - os: linux
#      env: COMPILER=icc   CMAKE_BUILD_TYPE=Debug
#    - os: linux
#      env: COMPILER=gcc   CMAKE_BUILD_TYPE=Debug
#    - os: linux
#      env: COMPILER=clang CMAKE_BUILD_TYPE=Debug
    - os: osx
      env: COMPILER=clang CMAKE_BUILD_TYPE=Debug
#    - os: linux
#      env: COMPILER=icc   CMAKE_BUILD_TYPE=Release
#    - os: linux
#      env: COMPILER=gcc   CMAKE_BUILD_TYPE=Release
#    - os: linux
#      env: COMPILER=clang CMAKE_BUILD_TYPE=Release
    - os: osx
      env: COMPILER=clang CMAKE_BUILD_TYPE=Release

fast_finish: true

install:
  - |
    if [ "${TRAVIS_OS_NAME}" == 'linux' ]; then
      sudo apt-get --no-install-recommends install texinfo texi2html texlive-base texlive-generic-recommended texlive-fonts-recommended doxygen graphviz texlive-latex-base texlive-latex-recommended texlive-latex-extra python-git
    else
      brew install texinfo
      brew ln texinfo --force
      brew upgrade cmake
    fi
  - |
    if [ $COMPILER == 'icc' ]; then 
      wget "https://raw.githubusercontent.com/nemequ/icc-travis/master/install-icc.sh"
      sudo sh install-icc.sh
      source ~/.bashrc
      export CMAKE_ARGS="${CMAKE_ARGS} -DCMAKE_CXX_COMPILER=icpc -DCMAKE_C_COMPILER=icc"
    fi
  - |
    if [ $COMPILER == 'clang' ]; then
      export CMAKE_ARGS="${CMAKE_ARGS} -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang"
    fi

script:
  - |
    mkdir build
    cd build
    cmake $CMAKE_ARGS -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} -DBUILD_DOC=ON -DBUILD_TESTING=ON -DDISABLE_REFMAN_PDF=ON ..

  - make lib
  
  - export CTEST_OUTPUT_ON_FAILURE=1
  - |
    if [ $COMPILER != 'icc' ]; then 
      make check-testsuite     # Build and check the testsuite
      make check-examples      # Build and check the examples
      # TODO! (fails with error: no such file or directory: 'arrdaxpyf.o')
      # - make check-benchmarks    # Build and check the benchmarks (takes a long time)
      make blitz-doc
      sudo make install        # Install Blitz++
      cd .. # build
      pip install GitPython
      travis-ci/check-wiki-examples.py
    fi

after_script:
  - if [ $COMPILER == icc ]; then '[[ ! -z "${INTEL_INSTALL_PATH}" ]] && uninstall_intel_software'; fi
